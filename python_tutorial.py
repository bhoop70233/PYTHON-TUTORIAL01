# -*- coding: utf-8 -*-
"""PYTHON -tutorial.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VlvHdAa5a59zIS29cfFDAC4S96HV9Nr5
"""

2+7
2*7

"""1. Print() function in python:

"""

print(2+7)
print(2*7)

print('Hello World!!!!')

"""Variables"""

month=12
print(month)

a=3
b=a
print(b)

"""If we don't declare the variable and try to print the output then we will get the following error


"""

print(x)

"""Multiple Assignment Operator"""

height = 3
length = 6
width = 2
volume = height * length * width
print(volume)

# this will now assign 3 to height, 6 to length and 2 to width just as before.
height , length , width = 3 , 6 , 2
volume = height * length * width
print(volume)

"""Variable Naming Conventions"""

#Allowed variable names

x=2
y="Hello"
mypython="PythonGuides"
my_python="PythonGuides"
_my_python="PythonGuides"
_mypython="PythonGuides"
MYPYTHON="PythonGuides"
myPython="PythonGuides"
myPython7="PythonGuides"

#Variable name not Allowed

7mypython="PythonGuides"
-mypython="PythonGuides"
myPy@thon="PythonGuides"
my Python="PythonGuides"
for="PythonGuides"

#It shows invalid syntax.

# pythonic way

my_height = 58
my_lat = 40
my_long = 105

# not pythonic way
my height = 58 # wont work
MYLONG = 40    # will work still avoid using it
MyLat = 105    # will work still avoid using it

"""overwriting"""

rent = 1700
rent = 2000
print(rent)

rent = 1700
rent = 2000
rent =rent + 700
print(rent)

rent = 1700
rent = 2000
rent += 700
print(rent)

"""Integers and Floats"""

print(3/2)

a = 3
b = 2.5

print(type(a))
print(type(b))

a = float(3)
b = int(28.9)
print(a)
print(b)

print(0.23 + 0.23 + 0.23 + 0.23 + 0.23 + 0.23
       + 0.23 + 0.23 + 0.23 + 0.23 + 0.23 + 0.23
       + 0.23 + 0.23 + 0.23 + 0.23 + 0.23 + 0.23
       + 0.23 + 0.23 + 0.23 + 0.23 + 0.23 + 0.23
       + 0.23 + 0.23 + 0.23 + 0.23+ 0.23 + 0.23 == 6.9)

"""Boolean Datatype, Comparison and Logical Operators"""

python_awsome = True
doumentation_bad = False

a = 3 > 1
print(a)

rent = 1200
is_affordable = rent > 1000 and rent < 2000

print(is_affordable)

rent = 1200
is_affordable = not(rent > 1000 and rent < 2000) #"not" just inverts bool value

print(is_affordable)

"""Strings"""

# using Double Quotes
print("ShapeAI")
# using Single Quotes
print('ShapeAI')

motto = "Learn | Code | Compete | Intern"
print(motto)

type(motto)

dialogue = "shiva said, "you learn as you grow""

dialogue = 'shiva said, "you learn as you grow"'
print(dialogue)

dialogue = '"shiva you\'re bag is red"'
print(dialogue)

print("hello" + "world")

print("hello" + " " + "world")

word = "hello"
print(word * 5)

word_1 = "hello"
word_2 = "world"
print(word_1 / word_2)

word_length = len("ShapeAI")
print(word_length)

"""Type and Type Conversion Revision"""

print(type(75))
print(type(75.0))
print(type("75"))
print(type(True))

decimal = float(3)
print(decimal)
print(type(decimal))

marks = 15
subject = "coding"
semester = "first"

result = "I scored " + str(marks) + " in " + subject + " during my " + semester + " semester."
print(result)

marks = "15"
print(type(marks))

marks = float(marks)
print(type(marks))

mon_sales = "121"
tues_sales = "105"
wed_sales = "110"
thurs_sales = "98"
fri_sales = "95"

#TODO: Print a string with this format: This week's total sales: xxx
# You will probably need to write some lines of code before the print statement.
total_sales = (float(mon_sales) + float(tues_sales) + float(wed_sales)
                + float(thurs_sales) + float(fri_sales))
print("This week\'s total sales: " + str(total_sales))

"""One important string method: format()"""

# Example 1
print("EG:1")
print("Mohammed has {} balloons".format(27))

#Example 2
print("EG:2")
animal = "dog"
action = "bite"
print("Does your {} {}?".format(animal, action))

# Example 3
print("EG:3")
maria_string = "Maria loves {} and {}"
print(maria_string.format("math","statistics"))

""" Lists and Membership Operators"""

students = ['sam', 'pam', 'rocky', 'austin', 'steve', 'banner']

print(students[0])
print(students[1])
print(students[2])

print(students[-1])
print(students[-2])
print(students[-3])

print(students[20])

# TODO: write your code here
students[len(students)-1]

"""a. Membership Operators:[Lists]"""

students = ['sam', 'pam', 'rocky', 'austin', 'steve', 'banner', 'tony', 'bruce',
            'henry', 'clark', 'diana']
student = "Barry"

# slice a particular range
marvel = students[4:7]
flash = student[1:3]

print(marvel)
print(flash)

# slice from the end
dc = students[7:]
flash = student[1:]

print(dc)
print(flash)

# slice from the begining
normal = students[:4]
flash = student[:3]

print(normal)
print(flash)

# length of the list and the string
print(len(students))
print(len(student))

greeting = "Hello there"
print('her' in greeting, 'her' not in greeting)

print('ShapeAI' in students, 'ShapeAI' not in students)

"""Mutability and Order"""

students = ['sam', 'pam', 'rocky', 'austin', 'steve', 'banner', 'tony', 'bruce',
            'henry', 'clark', 'diana']

students[2] = 'ben'
print(students)

student = "Barry"
student[1] = "e"
print(student)

student = "pam"
character = student
print(character)
character = "peter"
print(character)
print(student)

students = ['sam', 'pam', 'rocky', 'austin', 'steve', 'banner', 'tony', 'bruce',
            'henry', 'clark', 'diana']
characters = students
print(characters)
characters[1]= "peter"
print(characters)
print(students)

students = ['sam', 'pam', 'rocky', 'austin', 'steve', 'banner', 'tony', 'bruce',
            'henry', 'clark', 'diana']

student = "barry"

print(max(students))
print(max(student))

max([2, 'two'])

characters = sorted(students)
print(characters)

sep_str = "\n".join(["Jack", "O", "Lantern"])
print(sep_str)

name = "-".join(["Jack", "O", "Lantern"])
print(name)

letters = ['a', 'b', 'c', 'd']
letters.append('e')
print(letters)

"""Tuples"""

vector = (4, 5, 9)
print("x-coordinate:", vector[0])
print("y-coordinate:", vector[1])
print("z-coordinate:", vector[2])

location = 108.7774, 92.5556
latitude, longtitude = location
print("The coordinates are {} x {}".format(latitude, longtitude))

location = 108.7774, 92.5556

print("The coordinates are {} x {}".format(latitude, longtitude))

"""Dictionaries and Identity Operators"""

elements = {"hydrogen": 1, "helium": 2, "carbon": 6}

print(elements["helium"])  # print the value mapped to "helium"
elements["lithium"] = 3  # insert "lithium" with a value of 3 into the dictionary

print("carbon" in elements)
print(elements.get("dilithium"))

""". Keyword Operators"""

n = elements.get("dilithium")
print(n is None)
print(n is not None)

population = {"New York":17.8, "Spain":13.3, "Dhaka":13.0, "Mumbai":12.5}
print(population)

"""**Get()* with a Default Value:**"""

print(population.get('London'))

population['London']

population.get('London', 'There\'s no such place!')

"""Compound Data Structures"""

elements = {"hydrogen": {"number": 1,
                         "weight": 1.00794,
                         "symbol": "H"},
              "helium": {"number": 2,
                         "weight": 4.002602,
                         "symbol": "He"}}

helium = elements["helium"]  # get the helium dictionary
hydrogen_weight = elements["hydrogen"]["weight"]  # get hydrogen's weight

print(helium)
print(hydrogen_weight)

oxygen = {"number":8,"weight":15.999,"symbol":"O"}  # create a new oxygen dictionary
elements["oxygen"] = oxygen  # assign 'oxygen' as a key to the elements dictionary

print('elements = ', elements)

